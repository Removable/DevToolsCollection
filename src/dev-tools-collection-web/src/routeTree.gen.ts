/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ToolsUuidGeneratorRouteImport } from './routes/tools/uuid-generator'
import { Route as ToolsUrlCodecRouteImport } from './routes/tools/url-codec'
import { Route as ToolsTimestampRouteImport } from './routes/tools/timestamp'
import { Route as ToolsRegexTesterRouteImport } from './routes/tools/regex-tester'
import { Route as ToolsQrcodeGeneratorRouteImport } from './routes/tools/qrcode-generator'
import { Route as ToolsJsonFormatterRouteImport } from './routes/tools/json-formatter'
import { Route as ToolsHtmlPreviewRouteImport } from './routes/tools/html-preview'
import { Route as ToolsHashEncoderRouteImport } from './routes/tools/hash-encoder'
import { Route as ToolsBase64CodecRouteImport } from './routes/tools/base64-codec'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsUuidGeneratorRoute = ToolsUuidGeneratorRouteImport.update({
  id: '/tools/uuid-generator',
  path: '/tools/uuid-generator',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsUrlCodecRoute = ToolsUrlCodecRouteImport.update({
  id: '/tools/url-codec',
  path: '/tools/url-codec',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsTimestampRoute = ToolsTimestampRouteImport.update({
  id: '/tools/timestamp',
  path: '/tools/timestamp',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsRegexTesterRoute = ToolsRegexTesterRouteImport.update({
  id: '/tools/regex-tester',
  path: '/tools/regex-tester',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsQrcodeGeneratorRoute = ToolsQrcodeGeneratorRouteImport.update({
  id: '/tools/qrcode-generator',
  path: '/tools/qrcode-generator',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsJsonFormatterRoute = ToolsJsonFormatterRouteImport.update({
  id: '/tools/json-formatter',
  path: '/tools/json-formatter',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsHtmlPreviewRoute = ToolsHtmlPreviewRouteImport.update({
  id: '/tools/html-preview',
  path: '/tools/html-preview',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsHashEncoderRoute = ToolsHashEncoderRouteImport.update({
  id: '/tools/hash-encoder',
  path: '/tools/hash-encoder',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsBase64CodecRoute = ToolsBase64CodecRouteImport.update({
  id: '/tools/base64-codec',
  path: '/tools/base64-codec',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tools/base64-codec': typeof ToolsBase64CodecRoute
  '/tools/hash-encoder': typeof ToolsHashEncoderRoute
  '/tools/html-preview': typeof ToolsHtmlPreviewRoute
  '/tools/json-formatter': typeof ToolsJsonFormatterRoute
  '/tools/qrcode-generator': typeof ToolsQrcodeGeneratorRoute
  '/tools/regex-tester': typeof ToolsRegexTesterRoute
  '/tools/timestamp': typeof ToolsTimestampRoute
  '/tools/url-codec': typeof ToolsUrlCodecRoute
  '/tools/uuid-generator': typeof ToolsUuidGeneratorRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tools/base64-codec': typeof ToolsBase64CodecRoute
  '/tools/hash-encoder': typeof ToolsHashEncoderRoute
  '/tools/html-preview': typeof ToolsHtmlPreviewRoute
  '/tools/json-formatter': typeof ToolsJsonFormatterRoute
  '/tools/qrcode-generator': typeof ToolsQrcodeGeneratorRoute
  '/tools/regex-tester': typeof ToolsRegexTesterRoute
  '/tools/timestamp': typeof ToolsTimestampRoute
  '/tools/url-codec': typeof ToolsUrlCodecRoute
  '/tools/uuid-generator': typeof ToolsUuidGeneratorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/tools/base64-codec': typeof ToolsBase64CodecRoute
  '/tools/hash-encoder': typeof ToolsHashEncoderRoute
  '/tools/html-preview': typeof ToolsHtmlPreviewRoute
  '/tools/json-formatter': typeof ToolsJsonFormatterRoute
  '/tools/qrcode-generator': typeof ToolsQrcodeGeneratorRoute
  '/tools/regex-tester': typeof ToolsRegexTesterRoute
  '/tools/timestamp': typeof ToolsTimestampRoute
  '/tools/url-codec': typeof ToolsUrlCodecRoute
  '/tools/uuid-generator': typeof ToolsUuidGeneratorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/tools/base64-codec'
    | '/tools/hash-encoder'
    | '/tools/html-preview'
    | '/tools/json-formatter'
    | '/tools/qrcode-generator'
    | '/tools/regex-tester'
    | '/tools/timestamp'
    | '/tools/url-codec'
    | '/tools/uuid-generator'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/tools/base64-codec'
    | '/tools/hash-encoder'
    | '/tools/html-preview'
    | '/tools/json-formatter'
    | '/tools/qrcode-generator'
    | '/tools/regex-tester'
    | '/tools/timestamp'
    | '/tools/url-codec'
    | '/tools/uuid-generator'
  id:
    | '__root__'
    | '/'
    | '/tools/base64-codec'
    | '/tools/hash-encoder'
    | '/tools/html-preview'
    | '/tools/json-formatter'
    | '/tools/qrcode-generator'
    | '/tools/regex-tester'
    | '/tools/timestamp'
    | '/tools/url-codec'
    | '/tools/uuid-generator'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ToolsBase64CodecRoute: typeof ToolsBase64CodecRoute
  ToolsHashEncoderRoute: typeof ToolsHashEncoderRoute
  ToolsHtmlPreviewRoute: typeof ToolsHtmlPreviewRoute
  ToolsJsonFormatterRoute: typeof ToolsJsonFormatterRoute
  ToolsQrcodeGeneratorRoute: typeof ToolsQrcodeGeneratorRoute
  ToolsRegexTesterRoute: typeof ToolsRegexTesterRoute
  ToolsTimestampRoute: typeof ToolsTimestampRoute
  ToolsUrlCodecRoute: typeof ToolsUrlCodecRoute
  ToolsUuidGeneratorRoute: typeof ToolsUuidGeneratorRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/uuid-generator': {
      id: '/tools/uuid-generator'
      path: '/tools/uuid-generator'
      fullPath: '/tools/uuid-generator'
      preLoaderRoute: typeof ToolsUuidGeneratorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/url-codec': {
      id: '/tools/url-codec'
      path: '/tools/url-codec'
      fullPath: '/tools/url-codec'
      preLoaderRoute: typeof ToolsUrlCodecRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/timestamp': {
      id: '/tools/timestamp'
      path: '/tools/timestamp'
      fullPath: '/tools/timestamp'
      preLoaderRoute: typeof ToolsTimestampRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/regex-tester': {
      id: '/tools/regex-tester'
      path: '/tools/regex-tester'
      fullPath: '/tools/regex-tester'
      preLoaderRoute: typeof ToolsRegexTesterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/qrcode-generator': {
      id: '/tools/qrcode-generator'
      path: '/tools/qrcode-generator'
      fullPath: '/tools/qrcode-generator'
      preLoaderRoute: typeof ToolsQrcodeGeneratorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/json-formatter': {
      id: '/tools/json-formatter'
      path: '/tools/json-formatter'
      fullPath: '/tools/json-formatter'
      preLoaderRoute: typeof ToolsJsonFormatterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/html-preview': {
      id: '/tools/html-preview'
      path: '/tools/html-preview'
      fullPath: '/tools/html-preview'
      preLoaderRoute: typeof ToolsHtmlPreviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/hash-encoder': {
      id: '/tools/hash-encoder'
      path: '/tools/hash-encoder'
      fullPath: '/tools/hash-encoder'
      preLoaderRoute: typeof ToolsHashEncoderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/base64-codec': {
      id: '/tools/base64-codec'
      path: '/tools/base64-codec'
      fullPath: '/tools/base64-codec'
      preLoaderRoute: typeof ToolsBase64CodecRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ToolsBase64CodecRoute: ToolsBase64CodecRoute,
  ToolsHashEncoderRoute: ToolsHashEncoderRoute,
  ToolsHtmlPreviewRoute: ToolsHtmlPreviewRoute,
  ToolsJsonFormatterRoute: ToolsJsonFormatterRoute,
  ToolsQrcodeGeneratorRoute: ToolsQrcodeGeneratorRoute,
  ToolsRegexTesterRoute: ToolsRegexTesterRoute,
  ToolsTimestampRoute: ToolsTimestampRoute,
  ToolsUrlCodecRoute: ToolsUrlCodecRoute,
  ToolsUuidGeneratorRoute: ToolsUuidGeneratorRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
